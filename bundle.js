// bundle.js - ุบุฑูุฉ ุงูุฃุณุฑุงุฑ | ุชุญููู ุฏููู ูููุณุน ูุน ุชุดุจูู ุจุดุฎุตูุงุช ูุดููุฑุฉ
// ุชู ุงูุชุตููู ูุงูุชุทููุฑ ูู ูุจู: Mohammed Tarek

// --- ุชุญูู ูู ุฃู ุงููููุน ูุนูู ุฃูููุงูู ููุท ---
(function () {
  if (!window.location.protocol.startsWith('http')) {
    document.body.innerHTML = `
      <div style="text-align: center; padding: 50px; font-family: 'Segoe UI', sans-serif; direction: rtl; background: #0f172a; color: #e2e8f0;">
        <h2>๐ซ ุงููููุน ูุนูู ููุท ุฃูููุงูู</h2>
        <p>ููุญุตูู ุนูู ุงูุชุญูููุ ูุฑุฌู ุฒูุงุฑุฉ ุงููููุน ูู ุงูุฅูุชุฑูุช.</p>
      </div>
    `;
    throw new Error("ุงููููุน ูุนูู ููุท ุฃูููุงูู");
  }
  function checkOnline() {
    if (!navigator.onLine) {
      document.body.innerHTML = `
        <div style="text-align: center; padding: 50px; font-family: 'Segoe UI', sans-serif; direction: rtl; background: #0f172a; color: #e2e8f0;">
          <h2>๐ด ูุง ููุฌุฏ ุงุชุตุงู ุจุงูุฅูุชุฑูุช</h2>
          <p>ุชุญูู ูู ุงุชุตุงูู ูุญุงูู ูุฑุฉ ุฃุฎุฑู.</p>
          <button onclick="location.reload()" style="margin-top: 20px; padding: 10px 20px; background: #3b82f6; color: white; border: none; border-radius: 8px; cursor: pointer;">
            ุฃุนุฏ ุงููุญุงููุฉ
          </button>
        </div>
      `;
    }
  }
  checkOnline();
  window.addEventListener('online', checkOnline);
  window.addEventListener('offline', checkOnline);
})();

// --- ูุธุงู ุงูุชุฑุฌูุฉ ---
const Lang = {
  current: localStorage.getItem('lang') || 'ar',
  translations: {
    // ... ููุณ ุงูุชุฑุฌูุฉ ููุง ุจุงูููุฏ ุงูุณุงุจู ...
    ar: {/* ... ุชูุงุซู ุงูุณุงุจู ... */},
    en: {/* ... ุชูุงุซู ุงูุณุงุจู ... */}
  },
  init() {
    this.addSwitcher();
    this.apply();
    this.bind();
  },
  addSwitcher() {
    if (document.getElementById('langToggle')) return;
    const btn = document.createElement('button');
    btn.id = 'langToggle';
    btn.title = 'Change Language';
    btn.style.cssText = `
      position: fixed; top: 20px; left: 20px; z-index: 1000;
      background: rgba(251, 191, 36, 0.2); color: #fbbf24; border: 1px solid #fbbf24;
      padding: 8px 12px; border-radius: 8px; cursor: pointer; font-size: 1rem;
    `;
    btn.textContent = this.current === 'ar' ? 'EN' : 'AR';
    document.body.appendChild(btn);
  },
  apply() {
    const t = this.translations[this.current];
    if (!t) return;
    // ุชุญุฏูุซ ุงููุตูุต ุญุณุจ ุงููุบุฉ (ููุณ ุงูููุฏ ุงูุณุงุจู)
    function set(selector, value) {
      const el = document.querySelector(selector);
      if (el) el.textContent = value;
    }
    set('#userInfo h3:nth-of-type(1)', t.welcome_title);
    set('#userInfo h3:nth-of-type(2)', t.user_info_title);
    set('#userInfo p', t.user_info_desc);
    if (document.querySelector('#age')) document.querySelector('#age').previousElementSibling.textContent = t.age_label;
    if (document.querySelector('#gender')) document.querySelector('#gender').previousElementSibling.textContent = t.gender_label;
    set('#submitUserInfo', t.submit_user_info);
    set('#intro h1', t.intro_title);
    set('#intro h2', t.intro_subtitle);
    if (document.querySelector('#intro .divider + p')) document.querySelector('#intro .divider + p').textContent = t.intro_desc;
    if (document.querySelectorAll('#intro p')[0]) document.querySelectorAll('#intro p')[0].textContent = t.intro_p1;
    if (document.querySelectorAll('#intro p')[1]) document.querySelectorAll('#intro p')[1].textContent = t.intro_p2;
    set('#startBtn', t.start_btn);
    set('#nextBtn', t.next_btn);
    set('#restartBtn', t.restart_btn);
    set('footer p:nth-of-type(1)', t.footer1);
    set('footer p:nth-of-type(2)', t.footer2);
    const btn = document.getElementById('langToggle');
    if (btn) btn.textContent = t.lang_switch;
    document.documentElement.dir = this.current === 'ar' ? 'rtl' : 'ltr';
    document.documentElement.lang = this.current;
  },
  bind() {
    const btn = document.getElementById('langToggle');
    if (btn) {
      btn.onclick = () => {
        this.current = this.current === 'ar' ? 'en' : 'ar';
        localStorage.setItem('lang', this.current);
        location.reload(); // ุฃูุถู reload ุจุฏู apply ููุท ููุฃุณุฆูุฉ
      };
    }
  }
};

// --- ุงูุฃุณุฆูุฉ (20 ุณุคุงูุงู) ---
function getQuestions() {
  const t = Lang.translations[Lang.current];
  return [
    // 1 - 16 ูู ููุฏู
    {
      id: 1,
      text: t.q1,
      options: [
        { text: t.o1_1, trait: "E" },
        { text: t.o1_2, trait: "C" },
        { text: t.o1_3, trait: "Inferiority" },
        { text: t.o1_4, trait: "N" }
      ]
    },
    {
      id: 2,
      text: t.q2,
      options: [
        { text: t.o2_1, trait: "E,I" },
        { text: t.o2_2, trait: "I,S" },
        { text: t.o2_3, trait: "T" },
        { text: t.o2_4, trait: "F" }
      ]
    },
    {
      id: 3,
      text: t.q3,
      options: [
        { text: t.o3_1, trait: "Artisan" },
        { text: t.o3_2, trait: "NT" },
        { text: t.o3_3, trait: "Idealist" },
        { text: t.o3_4, trait: "Guardian" }
      ]
    },
    {
      id: 4,
      text: t.q4,
      options: [
        { text: t.o4_1, trait: "I" },
        { text: t.o4_2, trait: "S" },
        { text: t.o4_3, trait: "NF" },
        { text: t.o4_4, trait: "Rational" }
      ]
    },
    {
      id: 5,
      text: t.q5,
      options: [
        { text: t.o5_1, trait: "P" },
        { text: t.o5_2, trait: "C" },
        { text: t.o5_3, trait: "A" },
        { text: t.o5_4, trait: "Inferiority" }
      ]
    },
    {
      id: 6,
      text: t.q6,
      options: [
        { text: t.o6_1, trait: "D" },
        { text: t.o6_2, trait: "F" },
        { text: t.o6_3, trait: "N" },
        { text: t.o6_4, trait: "J" }
      ]
    },
    // 7-16 (ุฃููู ุจููุณ ุงูููุท)
    {
      id: 7,
      text: "ุนูุฏ ุงุชุฎุงุฐ ูุฑุงุฑ ูููุ ูุง ุงูุฐู ุชุซู ุจู ุฃูุซุฑุ",
      options: [
        { text: "ููุทู ุงูุนูู ูุชุญููู ุงููุฎุงุทุฑ", trait: "T" },
        { text: "ูุดุงุนุฑ ุงูููุจ ูุชุฃุซูุฑ ุงููุฑุงุฑ ุนูู ุงูุขุฎุฑูู", trait: "F" },
        { text: "ูุง ููููู ุงููุงููู ุฃู ุงูุชูุงููุฏ", trait: "S" },
        { text: "ุฑุคูุชู ุงููุณุชูุจููุฉ ูุงูุจุตูุฑุฉ", trait: "N" }
      ]
    },
    {
      id: 8,
      text: "ูุงุฐุง ุชูุนู ุนูุฏูุง ุชุดุนุฑ ุจุงูุถุบุทุ",
      options: [
        { text: "ุฃุชุญุฏู ุงููููู ูุจุงุดุฑุฉ", trait: "D" },
        { text: "ุฃุจุญุซ ุนู ุฏุนู ูู ุงูุขุฎุฑูู", trait: "I" },
        { text: "ุฃุจุชุนุฏ ูุคูุชูุง ูุฃุนูุฏ ุงูุชูููุฑ", trait: "S" },
        { text: "ุฃุญูู ุงููุดููุฉ ูู ูู ุงูุฒูุงูุง", trait: "C" }
      ]
    },
    {
      id: 9,
      text: "ูุง ููุน ุงููุชุจ ุฃู ุงููุญุชูู ุงูุฐู ุชูุถููุ",
      options: [
        { text: "ูุตุต ูุฌุงุญุ ููุงุฏุฉุ ุชุฃุซูุฑ", trait: "Guardian,Rational" },
        { text: "ุฑูุงูุงุชุ ููุณูุฉุ ุชุฃููุงุช ูุฌูุฏูุฉ", trait: "Idealist" },
        { text: "ุฃุฏูุฉ ุนูููุฉุ ุฎุทูุงุชุ ุชูููุงุช", trait: "S,J" },
        { text: "ุฃูุนุงุจุ ุฃูุบุงุฒุ ุชุฌุงุฑุจ ุฌุฏูุฏุฉ", trait: "SP" }
      ]
    },
    {
      id: 10,
      text: "ูุง ุงูุฐู ูุนุทูู ุฅุญุณุงุณูุง ุจุงููุนููุ",
      options: [
        { text: "ุชุญููู ุฅูุฌุงุฒุงุช ูุจูุฑุฉ", trait: "Self-actualization" },
        { text: "ุฎุฏูุฉ ุงูุขุฎุฑูู", trait: "Meaning" },
        { text: "ููู ุงูููู ุฃู ุงููุธุงู ุงููููู", trait: "Rational" },
        { text: "ุงูุงุณุชูุฑุงุฑ ูุงูุงูุชูุงุก", trait: "Generativity" }
      ]
    },
    {
      id: 11,
      text: "ูู ูุฑุฉ ุชุบูุฑ ุฑุฃูู ุจูุงุกู ุนูู ูุนูููุฉ ุฌุฏูุฏุฉุ",
      options: [
        { text: "ูุงุฏุฑูุงุ ุฃูุง ูุงุซู ูู ูุฑุงุฑุงุชู", trait: "D" },
        { text: "ุฃุญูุงููุงุ ุฅุฐุง ูุงูุช ุงูุญุฌุฉ ูููุฉ", trait: "T" },
        { text: "ุบุงูุจูุงุ ุฃุญุจ ุงูุชุนูู ุงููุณุชูุฑ", trait: "N" },
        { text: "ุจุดูู ูุชูุฑุฑุ ุฃุชุฃุซุฑ ุจูุดุงุนุฑ ุงูุขุฎุฑูู", trait: "F" }
      ]
    },
    {
      id: 12,
      text: "ูุง ุฃูู ุดูุก ูู ุจูุฆุฉ ุงูุนูู ุจุงููุณุจุฉ ููุ",
      options: [
        { text: "ุงููุชุงุฆุฌ ูุงูุฅูุฌุงุฒุงุช", trait: "D" },
        { text: "ุงูุทุงูุฉ ูุงูุชูุงุนู ุงูุงุฌุชูุงุนู", trait: "I" },
        { text: "ุงูุงุณุชูุฑุงุฑ ูุงูุงูุณุฌุงู", trait: "S" },
        { text: "ุงูุฏูุฉ ูุงูุชูุธูู", trait: "C" }
      ]
    },
    {
      id: 13,
      text: "ููู ุชุชุนุงูู ูุน ุงูุชุบููุฑุ",
      options: [
        { text: "ุฃูุง ูู ููุญุฏุซู", trait: "D" },
        { text: "ุฃุฑุญุจ ุจู ุฅุฐุง ูุงู ููุชุนูุง", trait: "I" },
        { text: "ุฃุชุฃููู ุจุจุทุก ูุญุฐุฑ", trait: "S" },
        { text: "ุฃุญููู ูุจู ูุจููู", trait: "C" }
      ]
    },
    {
      id: 14,
      text: "ูุง ุงูุฐู ููุดุนุฑู ุจุงููููุ",
      options: [
        { text: "ููุฏุงู ุงูุณูุทุฑุฉ ุนูู ุงูุฃููุฑ", trait: "D" },
        { text: "ุงููุญุฏุฉ ุฃู ููุฏุงู ุงูุชูุงุนู", trait: "I" },
        { text: "ุงูุตุฑุงุน ุฃู ุงูุชูุชุฑ ุจูู ุงููุฑูู", trait: "S" },
        { text: "ุงูุนุดูุงุฆูุฉ ุฃู ุบูุงุจ ุงููุธุงู", trait: "C" }
      ]
    },
    {
      id: 15,
      text: "ูุง ุฃูุซุฑ ุดูุก ุชููุฏูุฑู ูู ุงูุขุฎุฑููุ",
      options: [
        { text: "ุงูููุฉ ูุงูุทููุญ", trait: "D" },
        { text: "ุงูุทุงูุฉ ูุงูุญูููุฉ", trait: "I" },
        { text: "ุงูููุงุก ูุงูุฏุนู", trait: "S" },
        { text: "ุงูุฐูุงุก ูุงูุชุญููู", trait: "C" }
      ]
    },
    {
      id: 16,
      text: "ููู ุชูุฎุทุท ูููููุ",
      options: [
        { text: "ุจุดูู ูุจุงุดุฑุ ุฃุฑูุฒ ุนูู ุงูููุงู ุงูุนุงุฌูุฉ", trait: "D" },
        { text: "ุจุญุณุจ ูุง ููุดุนุฑูู ุจุงูุญูุงุณ", trait: "I" },
        { text: "ุจูุฏูุกุ ุญุณุจ ุงูุฃููููุงุช ูุงูุงูุชุฒุงูุงุช", trait: "S" },
        { text: "ุจุฌุฏูู ุฏููู ูุชูุตููู", trait: "C" }
      ]
    },
    // 17-20 (ุฃููู ููุง ูู ุงูููุฏ ุงูุฃุตูู)
    {
      id: 17,
      text: "ูุง ููุน ุงูุชุญุฏู ุงูุฐู ูุซูุฑูุ",
      options: [
        { text: "ุงูุชุญุฏูุงุช ุงููุจูุฑุฉ ุงูุชู ุชุบูุฑ ุงููุงูุน", trait: "D" },
        { text: "ุงูุชุญุฏูุงุช ุงูุชู ุชูุธูุฑ ุฅุจุฏุงุนู", trait: "I" },
        { text: "ุงูุชุญุฏูุงุช ุงูุชู ุชุณุงุนุฏ ุงูุขุฎุฑูู", trait: "S" },
        { text: "ุงูุชุญุฏูุงุช ุงูุชู ุชุชุทูุจ ุชูููุฑูุง ุนููููุง", trait: "C" }
      ]
    },
    {
      id: 18,
      text: "ููู ุชูุธูุฑ ููุชูุ",
      options: [
        { text: "ุจุงูููุงุฏุฉ ูุงูุณูุทุฑุฉ", trait: "D" },
        { text: "ุจุงูุฅููุงู ูุงูุญูุงุณ", trait: "I" },
        { text: "ุจุงูุฏุนู ูุงูุซุจุงุช", trait: "S" },
        { text: "ุจุงูุชุญููู ูุงูุฏูุฉ", trait: "C" }
      ]
    },
    {
      id: 19,
      text: "ูุง ุงูุฐู ููุดุนุฑู ุจุงูุฑุงุญุฉุ",
      options: [
        { text: "ุชุญููู ุงููุฏู", trait: "D" },
        { text: "ุงูุถุญู ูุงูุชูุงุนู", trait: "I" },
        { text: "ุงููุฏูุก ูุงูุงุณุชูุฑุงุฑ", trait: "S" },
        { text: "ุงููุธุงู ูุงูููู ุงููุงูู", trait: "C" }
      ]
    },
    {
      id: 20,
      text: "ูุง ูู ุดุนุงุฑู ูู ุงูุญูุงุฉุ",
      options: [
        { text: "ุงููุชูุฌุฉ ุฃูู ูู ุงูุทุฑููุฉ", trait: "D" },
        { text: "ุงูุญูุงุฉ ูููุฑุญ ูุงูุชุฌุฑุจุฉ", trait: "I" },
        { text: "ุงูุนูุงูุงุช ุชูุจูู ุจุงูุตุจุฑ ูุงูููุงุก", trait: "S" },
        { text: "ุงูููู ูุณุจู ูู ุดูุก", trait: "C" }
      ]
    }
  ];
}

// --- ุชุญููู ุงูุดุฎุตูุฉ ุงููุทููู (ููุณ ููุฏู ุงูุณุงุจู) ---
function generatePersonalityAnalysis(answers, userData) {
  // ... ููุณ ุงูุฏุงูุฉ ุงูุณุงุจูุฉ ...
  // ูู ูุชู ุชุบููุฑ ุฃู ููุทู ููุง ููุญูุงุธ ุนูู ุงููุชุงุฆุฌ
}

// --- ูุธุงู ุงูุชูุงุนู ---
document.addEventListener('DOMContentLoaded', () => {
  const userInfoEl = document.getElementById('userInfo');
  const introEl = document.getElementById('intro');
  const quizEl = document.getElementById('quiz');
  const resultEl = document.getElementById('result');
  const submitUserInfo = document.getElementById('submitUserInfo');
  const startBtn = document.getElementById('startBtn');
  const questionEl = document.getElementById('question');
  const optionsEl = document.getElementById('options');
  const nextBtn = document.getElementById('nextBtn');
  const analysisEl = document.getElementById('analysis');
  const restartBtn = document.getElementById('restartBtn');

  let userData = { age: '', gender: '' };
  let currentQ = 0;
  let userAnswers = [];
  let personalityQuestions = getQuestions();

  Lang.init();

  submitUserInfo.addEventListener('click', () => {
    const age = document.getElementById('age').value;
    const gender = document.getElementById('gender').value;
    if (!age || !gender) {
      alert("ุงูุฑุฌุงุก ุงุฎุชูุงุฑ ุงูุนูุฑ ูุงูุฌูุณ");
      return;
    }
    userData.age = age;
    userData.gender = gender;
    userInfoEl.style.display = 'none';
    introEl.style.display = 'block';
  });

  startBtn.addEventListener('click', () => {
    introEl.style.display = 'none';
    quizEl.style.display = 'block';
    personalityQuestions = getQuestions(); // ุชุญุฏูุซ ุญุณุจ ุงููุบุฉ
    showQuestion();
  });

  function showQuestion() {
    const q = personalityQuestions[currentQ];
    questionEl.innerHTML = `<h3>${currentQ + 1}. ${q.text}</h3>`;
    optionsEl.innerHTML = '';
    q.options.forEach((opt, index) => {
      const btn = document.createElement('button');
      btn.classList.add('option-btn');
      btn.textContent = opt.text;
      btn.addEventListener('click', () => {
        userAnswers[currentQ] = index;
        btn.classList.add('selected');
        Array.from(optionsEl.children).forEach(b => {
          if (b !== btn) b.classList.remove('selected');
        });
      });
      optionsEl.appendChild(btn);
    });
  }

  nextBtn.addEventListener('click', () => {
    if (userAnswers[currentQ] === undefined) {
      alert("ุงูุฑุฌุงุก ุงุฎุชูุงุฑ ุฅุฌุงุจุฉ");
      return;
    }
    currentQ++;
    if (currentQ < personalityQuestions.length) {
      showQuestion();
    } else {
      const fullAnalysis = generatePersonalityAnalysis(userAnswers, userData);
      analysisEl.textContent = fullAnalysis;
      quizEl.style.display = 'none';

      // --- ุฅุนูุงูุงุช (ููุง ูู ุจููุฏู) ---
      try {
        if (window.adNetworkLoaded) return;
        const adContainer = document.getElementById('monetag-inpage');
        if (!adContainer) return;
        adContainer.innerHTML = '<div style="padding: 15px; background: #1e293b; border: 1px solid #334155; border-radius: 8px; font-size: 0.9rem; color: #94a3b8;">ุฌุงุฑู ุชุญููู ุงูุฅุนูุงู...</div>';
        const roll = Math.random();
        let network, scriptSrc;
        if (roll < 0.45) {
          network = 'monetag';
          const monetagZones = ['9643708', '9643709', '9643715', '9643714'];
          const randomEmid = monetagZones[Math.floor(Math.random() * monetagZones.length)];
          scriptSrc = `https://g.adspeed.net/gads.js?async=1&emid=${randomEmid}`;
        } else if (roll < 0.70) {
          network = 'adsterra';
          scriptSrc = "";
        } else if (roll < 0.90) {
          network = 'richads';
          scriptSrc = "";
        } else {
          network = 'hilltop';
          scriptSrc = "";
        }
        if (!scriptSrc || scriptSrc.trim() === "") {
          adContainer.innerHTML = '<div style="color: #94a3b8; font-size: 0.9rem;">ุฅุนูุงู: ุดุงุฑู ุงููููุน ูุน ุฃุตุฏูุงุฆู!</div>';
          window.adNetworkLoaded = true;
          return;
        }
        const script = document.createElement('script');
        script.id = `ad-network-script-${network}`;
        script.async = true;
        script.src = scriptSrc;
        script.onload = () => {
          if (typeof goAds !== 'undefined' && goAds.length > 0) {
            goAds[0].loadAd && goAds[0].loadAd();
          } else if (window.RichAds && network === 'richads') {
            window.RichAds.setup && window.RichAds.setup();
          }
        };
        script.onerror = () => {
          adContainer.innerHTML = '<div style="color: #ef4444; font-size: 0.9rem;">ูุดู ุชุญููู ุงูุฅุนูุงู</div>';
        };
        document.body.appendChild(script);
        window.adNetworkLoaded = true;
      } catch (e) {
        console.error("Ad Networks: ูุดู ูู ุงูุชุญููู", e);
      }
      resultEl.style.display = 'block';
    }
  });

  restartBtn.addEventListener('click', () => {
    currentQ = 0;
    userAnswers = [];
    resultEl.style.display = 'none';
    userInfoEl.style.display = 'block';
  });
});
