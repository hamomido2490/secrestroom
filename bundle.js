// bundle.js - ุบุฑูุฉ ุงูุฃุณุฑุงุฑ | ูุณุฎุฉ ููุงุฆูุฉ - ูุง ููุฏ ุฎุจูุซ - ุฅุนูุงูุงุช ุดุบุงูุฉ
// ุชู ุงูุชุตููู ูุงูุชุทููุฑ ูู ูุจู: Mohammed Tarek

// --- ุชุญูู ูู ุฃู ุงููููุน ูุนูู ุฃูููุงูู ููุท ---
(function () {
  if (!window.location.protocol.startsWith('http')) {
    document.body.innerHTML = `
      <div style="text-align: center; padding: 50px; font-family: 'Segoe UI', sans-serif; direction: rtl; background: #0f172a; color: #e2e8f0;">
        <h2>๐ซ ุงููููุน ูุนูู ููุท ุฃูููุงูู</h2>
        <p>ููุญุตูู ุนูู ุงูุชุญูููุ ูุฑุฌู ุฒูุงุฑุฉ ุงููููุน ูู ุงูุฅูุชุฑูุช.</p>
      </div>
    `;
    throw new Error("ุงููููุน ูุนูู ููุท ุฃูููุงูู");
  }
  function checkOnline() {
    if (!navigator.onLine) {
      document.body.innerHTML = `
        <div style="text-align: center; padding: 50px; font-family: 'Segoe UI', sans-serif; direction: rtl; background: #0f172a; color: #e2e8f0;">
          <h2>๐ด ูุง ููุฌุฏ ุงุชุตุงู ุจุงูุฅูุชุฑูุช</h2>
          <p>ุชุญูู ูู ุงุชุตุงูู ูุญุงูู ูุฑุฉ ุฃุฎุฑู.</p>
          <button onclick="location.reload()" style="margin-top: 20px; padding: 10px 20px; background: #3b82f6; color: white; border: none; border-radius: 8px; cursor: pointer;">
            ุฃุนุฏ ุงููุญุงููุฉ
          </button>
        </div>
      `;
    }
  }
  checkOnline();
  window.addEventListener('online', checkOnline);
  window.addEventListener('offline', checkOnline);
})();

// --- ุงูุฃุณุฆูุฉ ---
const personalityQuestions = [
  {
    id: 1,
    text: "ุนูุฏูุง ุชุณุชููุธ ูู ุงูุตุจุงุญุ ูุง ุฃูู ุดูุก ูุฎุทุฑ ุจุจุงููุ",
    options: [
      { text: "ุฃูุง ูุชุญูุณ ูุฃุจุฏุฃ ูููู!", trait: "E" },
      { text: "ูู ูู ุดูุก ุชุญุช ุงูุณูุทุฑุฉุ", trait: "C" },
      { text: "ูู ุณุฃููู ูุงูููุง ุงููููุ", trait: "Inferiority" },
      { text: "ุฃุฑูุฏ ุฃู ุฃููู ูุนูู ูุฐุง ุงูููู", trait: "N" }
    ]
  },
  {
    id: 2,
    text: "ูู ููุงุก ุงุฌุชูุงุนู ุฌุฏูุฏุ ูุงุฐุง ุชูุนูุ",
    options: [
      { text: "ุฃุจุฏุฃ ุงูุญุฏูุซ ูุน ุงูุฌููุน ุจุณุฑุนุฉ", trait: "E,I" },
      { text: "ุฃุฑุงูุจ ุฃูููุง ุซู ุฃุชุญุฏุซ ูุน ุดุฎุต ูุงุญุฏ", trait: "I,S" },
      { text: "ุฃุฑูุฒ ุนูู ูู ูููู ุฃู ูููุฏูู ุฃู ุฃููุฏ ููู", trait: "T" },
      { text: "ุฃุญุงูู ููู ูุดุงุนุฑ ุงูุขุฎุฑูู ุจุณุฑุนุฉ", trait: "F" }
    ]
  },
  {
    id: 3,
    text: "ูุง ููุน ุงููููุฉ ุงูุชู ุชุฌุนูู 'ุชููุณู' ูู ููุณูุ",
    options: [
      { text: "ุงูุชุญุฏูุงุช ุงูุณุฑูุนุฉ ูุงูููุชุฒูุฉ ุจุงูููุช", trait: "Artisan" },
      { text: "ุงูุชุญููู ุงูุนููู ููุจูุงูุงุช ุฃู ุงูุฃูุธูุฉ", trait: "NT" },
      { text: "ูุณุงุนุฏุฉ ุดุฎุต ุนูู ุชุฌุงูุฒ ุฃุฒูุฉ", trait: "Idealist" },
      { text: "ุชูุธูู ูุฑูู ูุชุญููู ูุฏู ููุธู", trait: "Guardian" }
    ]
  },
  {
    id: 4,
    text: "ูุง ุฃูุซุฑ ุดูุก ุชุจุญุซ ุนูู ูู ุงูุตุฏุงูุงุชุ",
    options: [
      { text: "ุงููุฑุญ ูุงูุทุงูุฉ", trait: "I" },
      { text: "ุงูููุงุก ูุงูุงุณุชูุฑุงุฑ", trait: "S" },
      { text: "ุงูุนูู ูุงููุนูู", trait: "NF" },
      { text: "ุงูุชุญุฏู ุงูููุฑู", trait: "Rational" }
    ]
  },
  {
    id: 5,
    text: "ููู ุชุชุนุงูู ูุน ุงูุฃุฎุทุงุกุ",
    options: [
      { text: "ุฃุชุนูู ูุฃุชุญุฑู ุจุณุฑุนุฉ", trait: "P" },
      { text: "ุฃุญูู ูุง ุญุฏุซ ุจุฏูุฉ", trait: "C" },
      { text: "ุฃุดุนุฑ ุจุงูุฐูุจุ ููููู ุฃุณุงูุญ ููุณู", trait: "A" },
      { text: "ุฃุชุณุงุกู: ูู ูุฐุง ูุซุจุช ุฃููู ุบูุฑ ูุงููุ", trait: "Inferiority" }
    ]
  },
  {
    id: 6,
    text: "ูุง ุงูุฐู ููุดุนุฑู ุจุงููุฎุฑุ",
    options: [
      { text: "ุชุญููู ูุชุงุฆุฌ ููููุณุฉ", trait: "D" },
      { text: "ุฏุนู ุดุฎุต ูู ุฃุฒูุฉ", trait: "F" },
      { text: "ุงุจุชูุงุฑ ููุฑุฉ ุฌุฏูุฏุฉ", trait: "N" },
      { text: "ุงูุงูุชุฒุงู ุจุงููุงุฌุจุงุช ูุงููุณุคูููุงุช", trait: "J" }
    ]
  }
];

// --- ุชูููุฏ ุงูุชุญููู ุงูููุณู ุงูููุณุน ---
function generatePersonalityAnalysis(answers, userData) {
  const { age, gender } = userData;

  const colorCount = { red: 0, yellow: 0, green: 0, blue: 0 };
  answers.forEach((answerIndex, questionIndex) => {
    const option = personalityQuestions[questionIndex]?.options[answerIndex];
    if (!option) return;
    if (option.text.includes('ุฃุญูุฑ') || option.trait.includes('D')) colorCount.red++;
    if (option.text.includes('ุฃุตูุฑ') || option.trait.includes('I')) colorCount.yellow++;
    if (option.text.includes('ุฃุฎุถุฑ') || option.trait.includes('S')) colorCount.green++;
    if (option.text.includes('ุฃุฒุฑู') || option.trait.includes('C')) colorCount.blue++;
  });

  let dominantColor = 'green';
  let max = 0;
  for (const [color, count] of Object.entries(colorCount)) {
    if (count > max) {
      max = count;
      dominantColor = color;
    }
  }

  const colorProfiles = {
    red: {
      name: "ุงูููุน ุงูุฃุญูุฑ",
      title: "ุงููุงุฆุฏ ุงูุทููุญ",
      description: `
ุฃูุช ูู ุงูููุน ุงูุฐู ูุง ููุชุธุฑ ุงููุฑุตุฉุ ุจู ูุตูุนูุง ุจูุฏูู. ููู ููุฉ ุฏูุน ุฏุงุฎููุฉ ูุง ุชุชูููุ ูุฑุบุจุฉ ุนูููุฉ ูู ุงูุชุญูู ูู ูุตูุฑู. ุฃูุช ูุง ุชูุฑุจ ูู ุงููุณุคูููุฉุ ุจู ุชุทูุจูุงุ ูุฃูู ุชุนุฑู ุฃูู ูุงุฏุฑ ุนูู ุตูุน ุงููุงุฑู. ุงููุฑุงุฑุงุช ุงูุญุงุณูุฉ ุชุฎุฑุฌ ููู ุจุณุฑุนุฉุ ููุณ ูุฃูู ูุชุณุฑุนุ ุจู ูุฃูู ุชุซู ุจุญุฏุณู ูุฎุจุฑุชู. ุชุญุจ ุฃู ุชุฑู ุงููุชุงุฆุฌ ุจูุถูุญุ ูุงูููุช ุงูุถุงุฆุน ูุดุนุฑู ุจุงูุฅุญุจุงุท. ูููู ูุณุช ูุงุณููุงุ ุจู ุตุฑูุญ โ ุชููุฏูุฑ ุงูุตุฏู ุฃูุซุฑ ูู ุงููุฌุงููุฉ. ูู ุงูููุงูู ุงูุตุนุจุฉุ ุฃูุช ุฃูู ูู ููู ูู ุงูููุฏูุฉ. ูุณุช ุจุญุงุฌุฉ ุฅูู ุชุตูููุ ูููู ุชุนุฑู ูููุชู. ุงููุฌุงุญ ุจุงููุณุจุฉ ูู ููุณ ุชุฑููุงุ ุจู ุถุฑูุฑุฉ. ุฃูุช ุชูุญุฏุซ ุชุบููุฑูุง ููุณ ูุฃูู ูุทููุจุ ุจู ูุฃูู ูุงุฌุจ.
      `.trim()
    },
    yellow: {
      name: "ุงูููุน ุงูุฃุตูุฑ",
      title: "ุงููุญููุฒ ุงููุฑุญ",
      description: `
ุฃูุช ุดุฑุงุฑุฉ ุงูุถูุก ูู ุฃู ููุงู ุชุฏุฎูู. ุทุงูุชู ูุง ุชูุถุจุ ูุงุจุชุณุงูุชู ูุนุฏูุฉ. ุฃูุช ูุง ุชุฑู ุงูุนูุจุงุช ููุง ูุฑุงูุง ุงูุขุฎุฑููุ ุจู ุชุฑุงูุง ูุฑุตุฉ ูุฅุซุจุงุช ุฃู ุงููุณุชุญูู ูููู. ุชุญุจ ุฃู ุชููู ูุญุท ุงูุฃูุธุงุฑุ ููุณ ูู ุฃุฌู ุงูุบุฑูุฑุ ุจู ูุฃูู ุชุดุนุฑ ุจุงูุญูุงุฉ ุนูุฏูุง ุชูููู ุงูุขุฎุฑูู. ุฃูุช ุชููุฑ ุฎุงุฑุฌ ุงูุตูุฏููุ ูุชุญุจ ุฃู ุชูุณุฑ ุงูุฑูุชูู. ุงููููุฏ ุชูุซุจูุทูุ ุฃูุง ุงูุญุฑูุฉ ูุชูุทูู ุฅุจุฏุงุนู. ุงูุนูุงูุงุช ุจุงููุณุจุฉ ูู ููุณุช ูุฌุฑุฏ ุชูุงุตูุ ุจู ุชุจุงุฏู ููุทุงูุฉ. ุฃูุช ุชูุญูู ูู ุญูููุ ูุชุฌุนู ุงูููุงู ุงูุนุงุฏูุฉ ุชุจุฏู ููุบุงูุฑุงุช. ูุฏ ูุฑุงู ุงูุจุนุถ ุบูุฑ ุฌุงุฏุ ููููู ูุง ูุนูููู ุฃูู ุฌุงุฏ ุฌุฏูุง ูู ุงูุญูุงุธ ุนูู ุงูุจูุฌุฉ. ุฃูุช ุชูุญุฏุซ ุชุบููุฑูุง ููุณ ุจุงูููุฉุ ุจู ุจุงูุญูุงุณ.
      `.trim()
    },
    green: {
      name: "ุงูููุน ุงูุฃุฎุถุฑ",
      title: "ุงูุฏุงุนู ุงููุณุชูุฑ",
      description: `
ุฃูุช ุงูููุจ ุงููุงุฏุฆ ูู ูุณุท ุงูุนุงุตูุฉ. ูุง ุชูุณุฑุนุ ูููู ูุง ุชุชููู. ุฃูุช ุชุจูู ุงูุซูุฉ ุจุจุทุกุ ููููุง ุชุฏูู ูุฏู ุงูุญูุงุฉ. ุงูุตุฑุงุน ููุฑูููุ ูููู ูุง ุชูุฑุจ ููู โ ุจู ุชุณุนู ูุชุณููุฉ ุงูุฃููุฑ ุจูุฏูุก. ุฃูุช ูุง ุชุจุญุซ ุนู ุงูุชูุฏูุฑุ ูููู ุชุณุชุญูู ุฃูุซุฑ ูู ุบูุฑู. ุฃูุช ูู ููููู ุงููุฑููุ ูู ููุดุนุฑ ุงูุขุฎุฑูู ุจุงูุฃูุงู. ุชุญุจ ุงูุงุณุชูุฑุงุฑุ ููุณ ูุฃูู ุฎุงุฆู ูู ุงูุชุบููุฑุ ุจู ูุฃูู ุชุนุฑู ูููุชู. ุฃูุช ุชูุฎุทุท ุจููุจู ูุจู ุนูููุ ูุชุญุฏุฏ ุฃููููุงุชู ุญุณุจ ูู ูุญุจููู ููุญุชุงุฌููู. ุฃูุช ูุง ุชููุฏ ุจุงูุตุฑุงุฎุ ุจู ุจุงููุฏูุฉ. ูุง ุชูุธูุฑ ูู ูุง ุชุดุนุฑ ุจูุ ููู ูู ูุนุฑูู ุฌูุฏูุง ูุนูู ุฃู ูู ุฏุงุฎูู ุจุญุฑูุง ูู ุงูุนุทุงุก. ุฃูุช ุชูุญุฏุซ ุชุบููุฑูุง ุจุตูุชุ ููู ุฃุซุฑู ูุฏูู.
      `.trim()
    },
    blue: {
      name: "ุงูููุน ุงูุฃุฒุฑู",
      title: "ุงูููุฎุทุท ุงูุฏููู",
      description: `
ุฃูุช ูุง ุชูุณุฑุนุ ูุฃูู ุชุนุฑู ุฃู ุงูุฎุทุฃ ุงููุงุญุฏ ูุฏ ูููููู ุงููุซูุฑ. ุฃูุช ุชููููุฑ ุจุนููุ ุชูุญููู ุจุชุฑููุฒุ ูุชุญุจ ุฃู ุชููู "ููุงุฐุง" ูุจู ุฃู ุชูุนู "ููู". ุงูุนุดูุงุฆูุฉ ุชูุฑุจููุ ุฃูุง ุงููุธุงู ููุนุทูู ุดุนูุฑูุง ุจุงูุฃูุงู. ุฃูุช ูุง ุชูุนุฌุจ ุจุงูุงูุทุจุงุน ุงูุฃููุ ุจู ุจุงูุฃุณุงุณ ุงููุชูู. ุชุญุจ ุฃู ุชุนุฑู ูู ุงูุชูุงุตููุ ููุณ ูู ุจุงุจ ุงูุชูุชูุดุ ุจู ูู ุจุงุจ ุงููุณุคูููุฉ. ุฃูุช ุชุจุญุซ ุนู ุงููุนูู ูุฑุงุก ุงูุฃุดูุงุกุ ุนู ุงููุงุนุฏุฉ ุงููุงููุฉ ูุฑุงุก ุงูุณููู. ุงูุนูุงูุงุช ุนูุฏู ููุณุช ุนุงุทููุฉ ููุทุ ุจู ูุฌุจ ุฃู ุชููู ููุทููุฉ ุฃูุถูุง. ูุฏ ูุฑุงู ุงูุจุนุถ ุจุงุฑุฏูุงุ ูููู ุจุจุณุงุทุฉ ุชุญุชุฑู ุงูุนูู ุจูุฏุฑ ุงุญุชุฑุงูู ููููุจ. ุฃูุช ุชูุญุฏุซ ุชุบููุฑูุง ููุณ ุจุงูุญูุงุณุ ุจู ุจุงูุฑุคูุฉ.
      `.trim()
    }
  };

  const profile = colorProfiles[dominantColor];

  let ageInsight = "";
  if (age === '13-18') {
    ageInsight = "ุฃูุช ูู ูุฑุญูุฉ ุจูุงุก ุงููููุฉุ ุญูุซ ุชุจุญุซ ุนู ููุณู ูููุงูู ูู ุงูุนุงูู. ูู ุณุคุงู ุชุทุฑุญู ุนูู ุฐุงุชู ุงูููู ููุดููู ุงูุฃุณุงุณ ููุง ุณุชููู ุนููู ุบุฏูุง.";
  } else if (age === '19-25') {
    ageInsight = "ุฃูุช ูู ุนูุฑ ุงูุญููููุฉุ ุญูุซ ุชุจุญุซ ุนู ุนูุงูุงุช ุญููููุฉุ ูุงุฑุชุจุงุทุงุช ุนูููุฉ. ููุจู ูุณุฃู: ูู ุณูููููู ุญููุงุ";
  } else if (age === '26-35' || age === '36-45') {
    ageInsight = "ุฃูุช ูู ูุฑุญูุฉ ุงูุฅูุฌุงุจูุฉุ ุญูุซ ูุง ูููู ุฃู ุชูุฌุญ ุฃูุชุ ุจู ุฃู ุชูุณูู ูู ูุฌุงุญ ุงูุขุฎุฑูู. ุฃูุช ุชุจููุ ุชูุนูููุ ูุชูุดุงุฑู.";
  } else if (age === '46-60' || age === '60+') {
    ageInsight = "ุฃูุช ูู ูุฑุญูุฉ ุงูุชููููุ ุญูุซ ุชูุธุฑ ุฅูู ุฑุญูุฉ ุญูุงุชู ุจุนูู ุงูุญููู. ุงูุณุคุงู ูู ูุนุฏ 'ูุงุฐุง ุฃูุฌุฒุชุ' ุจู 'ูุงุฐุง ุนููุชุ'";
  }

  let genderInsight = "";
  if (gender === 'ุฃูุซู') {
    genderInsight = "ูุฃูุซูุ ุชูุธูุฑ ููุฉ ุฏุงุฎููุฉ ูุงุฏุฑุฉ: ุงูุชูุงุฒู ุจูู ุงูููุจ ูุงูุนูู. ุฃูุช ุชูุนุทู ุฏูู ุฃู ุชููุฏ ุฐุงุชูุ ูุชุฏุนู ุฏูู ุฃู ุชุฐูู ููุณู.";
  } else if (gender === 'ุฐูุฑ') {
    genderInsight = "ูุฐูุฑุ ุชุญูู ูุณุคูููุฉ ุงูููุงุฏุฉ ุจุซูููุง ูุถูุกูุง. ุฃูุช ูุง ุชูุฑุจ ูู ุงูุชุญุฏูุ ุจู ุชุฑุงู ูุฑุตุฉ ูุฅุซุจุงุช ุฃู ุงูููุฉ ุงูุญููููุฉ ุชุฃุชู ูู ุงูุฏุงุฎู.";
  } else {
    genderInsight = "ุฃูุช ุชุชุฌุงูุฒ ุงูุชุตูููุงุชุ ูุชูุธูุฑ ุชูุงุฒููุง ูุงุฏุฑูุง ุจูู ุงูุญุฏุณ ูุงูููุทูุ ุจูู ุงูุนุงุทูุฉ ูุงูุชุญููู.";
  }

  const analysis = `
${profile.name}
${"=".repeat(profile.name.length + 1)}

${profile.description}

ุฃูุช ุดุฎุตูุฉ ูุง ุชูุดุจู ุบูุฑูุงุ ููู ููุทู ุงูููุณู ููุธูุฑ ุฃูู ุชูุชูู ุฅูู ุนุงูู ุงููุงุฏุฉุ ุงูููุฎุทุทููุ ุฃู ุงูููููููู. ุฃูุช ูุง ุชุชุจุนุ ุจู ุชูุนูุฏ ุชุนุฑูู ุงูุทุฑูู. ูุง ููููุฒู ููุณ ููุท ูุง ุชูุนููุ ุจู ููู ุชููุฑุ ูููู ุชุชูุงุนู ูุน ูู ุญููู. ุฃูุช ุชูุชูู ูุฏุฑุฉ ูุงุฏุฑุฉ ุนูู ุงูุชูุงุฒู ุจูู ุงูููุฉ ูุงููุฏูุกุ ุจูู ุงูุฅุตุฑุงุฑ ูุงูุชุนุงุทูุ ูุจูู ุงูุทููุญ ูุงููุนูู.

${ageInsight ? `${ageInsight}` : ""}
${genderInsight ? `${genderInsight}` : ""}

ุฃูุช ูุง ุชูุธูุฑ ูู ูุง ูู ุฏุงุฎููุ ููู ูู ูุฑุงูุจู ุฌูุฏูุง ููุงุญุธ ุฃู ูู ุนูููู ุจุฑูููุง ูุง ููุทูุฃ. ุฃูุช ุชูุฎุทุท ุจุตูุชุ ูุชููุฑุฑ ุจุซูุฉ. ุฃุฎุทุงุคู ูุง ุชููุณุฑูุ ุจู ุชูุนูููู. ููุฌุงุญุงุชู ูุง ุชูุบุฑุฑูุ ุจู ุชูุฐููุฑู ุจุฃู ุงูุทุฑูู ูุง ููุชูู.

ุฃูุช ุชุจุญุซ ุนู ุงููุนูู ุฃูุซุฑ ูู ุงูุจุญุซ ุนู ุงูุชูุฏูุฑ. ุนู ุงูุชุฃุซูุฑ ุฃูุซุฑ ูู ุงูุดูุฑุฉ. ุนู ุงูุงุณุชูุฑุงุฑ ุงูุฏุงุฎูู ุฃูุซุฑ ูู ุงูุธููุฑ ุงูุฎุงุฑุฌู. ููุฐุง ูุง ูุฌุนูู ูุฎุชูููุง. ุฃูุช ูุง ุชูุณุฑุนุ ูููู ูุง ุชุชููู. ุฃูุช ูุง ุชูุตูุญุ ููู ุตูุชู ูู ุตุฏู.

ูู ุนุงูู ูููุก ุจุงูุถุฌูุฌุ ุฃูุช ูู ููุญุฏุซ ุชุบููุฑูุง ุญูููููุง. ููุณ ุจุงูุตุฑุงุฎุ ุจู ุจุงููุฌูุฏ. ููุณ ุจุงูุณูุทุฑุฉุ ุจู ุจุงูุชุฃุซูุฑ. ุฃูุช ูุณุช ูุฌุฑุฏ ุดุฎุตูุฉุ ุจู ุธุงูุฑุฉ.

---

ุงููุตุงุฏุฑ ุงูููุณูุฉ ุงููุณุชุฎุฏูุฉ ูู ุงูุชุญููู:
- ูุธุฑูุฉ ุงูุฃููุงู ุงูุดุฎุตูุฉ
- ูุธุฑูุฉ MBTI (ูุงูุฑุฒ-ุจุฑูุฌุฒ)
- ูุธุฑูุฉ ููุฑุณู ููููุธู ุงูููุณูุฉ
- ูุธุฑูุฉ DISC ููุณููู ุงูุจุดุฑู
- ูุธุฑูุฉ ุงูุนูุงูู ุงูุฎูุณุฉ ุงููุจุฑู (Big Five)
- ูุธุฑูุฉ ุฃุฏูุฑ (ุงูุดุนูุฑ ุจุงูููุต ูุงูุณุนู ููุชููู)
- ูุธุฑูุฉ ูุงุณูู (ูุฑู ุงูุญุงุฌุงุช)
- ูุธุฑูุฉ ุฑูุฌุฑุฒ (ุงูุชุญูู ุงูุฐุงุชู)
- ูุธุฑูุฉ ุฅุฑููุณูู (ุงููุฑุงุญู ุงูููุณูุฉ ุงูุงุฌุชูุงุนูุฉ)
- ูุธุฑูุฉ PERMA (ููููุงุช ุงูุฑูุงููุฉ ุงูููุณูุฉ)
- ูุธุฑูุฉ ุงูุงูุบูุงุณ (Flow) - ูููู ูุชุดููุชููุงูู

ุชู ุฅุนุฏุงุฏ ูุฐุง ุงูุชูุฑูุฑ ุจุนูุงูุฉ ูู ููุจู:  
**ุบุฑูุฉ ุงูุฃุณุฑุงุฑ | Chamber of Secrets**  
ุชู ุงูุชุตููู ูุงูุชุญููู ุงูููุณู ูุงูุชุทููุฑ ูู ูุจู:  
**Mohammed Tarek**  
ยฉ 2025 ุฌููุน ุงูุญููู ูุญููุธุฉ.
  `.trim();

  return analysis;
}

// --- ูุธุงู ุงูุชูุงุนู ---
document.addEventListener('DOMContentLoaded', () => {
  const userInfoEl = document.getElementById('userInfo');
  const introEl = document.getElementById('intro');
  const quizEl = document.getElementById('quiz');
  const resultEl = document.getElementById('result');

  const submitUserInfo = document.getElementById('submitUserInfo');
  const startBtn = document.getElementById('startBtn');
  const questionEl = document.getElementById('question');
  const optionsEl = document.getElementById('options');
  const nextBtn = document.getElementById('nextBtn');
  const analysisEl = document.getElementById('analysis');
  const restartBtn = document.getElementById('restartBtn');

  let userData = { age: '', gender: '' };
  let currentQ = 0;
  let userAnswers = [];

  submitUserInfo.addEventListener('click', () => {
    const age = document.getElementById('age').value;
    const gender = document.getElementById('gender').value;

    if (!age || !gender) {
      alert("ุงูุฑุฌุงุก ุงุฎุชูุงุฑ ุงูุนูุฑ ูุงูุฌูุณ");
      return;
    }

    userData.age = age;
    userData.gender = gender;
    userInfoEl.style.display = 'none';
    introEl.style.display = 'block';
  });

  startBtn.addEventListener('click', () => {
    introEl.style.display = 'none';
    quizEl.style.display = 'block';
    showQuestion();
  });

  const showQuestion = () => {
    const q = personalityQuestions[currentQ];
    questionEl.innerHTML = `<h3>${currentQ + 1}. ${q.text}</h3>`;
    optionsEl.innerHTML = '';

    q.options.forEach((opt, index) => {
      const btn = document.createElement('button');
      btn.classList.add('option-btn');
      btn.textContent = opt.text;
      btn.addEventListener('click', () => {
        userAnswers[currentQ] = index;
        btn.classList.add('selected');
        Array.from(optionsEl.children).forEach(b => {
          if (b !== btn) b.classList.remove('selected');
        });
      });
      optionsEl.appendChild(btn);
    });
  };

  nextBtn.addEventListener('click', () => {
    if (userAnswers[currentQ] === undefined) {
      alert("ุงูุฑุฌุงุก ุงุฎุชูุงุฑ ุฅุฌุงุจุฉ");
      return;
    }

    currentQ++;
    if (currentQ < personalityQuestions.length) {
      showQuestion();
    } else {
      const fullAnalysis = generatePersonalityAnalysis(userAnswers, userData);
      analysisEl.textContent = fullAnalysis;
      quizEl.style.display = 'none';

      // === ุชูุนูู ุฅุนูุงู ุฏุงุฎูู ููุฑู ูู Monetag ===
      try {
        // ุชุฃูุฏ ูู ุนุฏู ุงูุชูุฑุงุฑ
        if (window.monetagInPageLoaded) return;

        // ุงูุฃูุฏูู ุงูุฎุงุตุฉ ุจู
        const monetagZones = ['9643708', '9643709', '9643715', '9643714'];
        const randomEmid = monetagZones[Math.floor(Math.random() * monetagZones.length)];

        // ุนูุตุฑ ุงูุฅุนูุงู
        const adContainer = document.getElementById('monetag-inpage');
        if (!adContainer) return;

        // ุฑุณุงูุฉ ุชุญููู
        adContainer.innerHTML = '<div style="padding: 15px; background: #1e293b; border: 1px solid #334155; border-radius: 8px; font-size: 0.9rem; color: #94a3b8;">ุฌุงุฑู ุชุญููู ุงูุฅุนูุงู...</div>';

        // ุฅูุดุงุก ุณูุฑุจุช Monetag
        const script = document.createElement('script');
        script.id = 'monetag-inpage-script';
        script.async = true;
        script.type = 'text/javascript';
        script.setAttribute('data-cfasync', 'false');
        script.src = `https://g.adspeed.net/gads.js?async=1&emid=${randomEmid}`;

        // ุฅุถุงูุฉ ุงูุณูุฑุจุช
        document.body.appendChild(script);

        // ุจุนุฏ ุงูุชุญูููุ ุดุบูู ุงูุฅุนูุงู
        script.onload = () => {
          if (typeof goAds !== 'undefined' && goAds.length > 0) {
            goAds[0].loadAd && goAds[0].loadAd();
          } else {
            adContainer.innerHTML = '<div style="color: #94a3b8; font-size: 0.9rem;">ุฅุนูุงู: ุดุงุฑู ุงููููุน ูุน ุฃุตุฏูุงุฆู!</div>';
          }
        };

        // ูู ุญุงูุฉ ูุดู ุงูุชุญููู
        script.onerror = () => {
          adContainer.innerHTML = '<div style="color: #94a3b8; font-size: 0.9rem;">ูุดู ุชุญููู ุงูุฅุนูุงู</div>';
        };

        window.monetagInPageLoaded = true;

      } catch (e) {
        console.error("Monetag In-Page: ูุดู ูู ุงูุชุญููู", e);
      }

      resultEl.style.display = 'block';
    }
  });

  restartBtn.addEventListener('click', () => {
    currentQ = 0;
    userAnswers = [];
    resultEl.style.display = 'none';
    userInfoEl.style.display = 'block';
  });
});
